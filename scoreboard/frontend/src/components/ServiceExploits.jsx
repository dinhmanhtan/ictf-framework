import React, { Component } from 'react';
import _ from 'underscore';
import dayjs from 'dayjs';

import Table from './shared/Table';

export default class ServiceExploits extends Component {
  state = {
    explotedServices: {},
    firstBlood: [],
    services: {}
  }

  componentWillMount() {
    this.parseDataAndSetState(this.props);
  }

  componentWillReceiveProps(nextProps) {
    this.parseDataAndSetState(nextProps);
  }

  parseDataAndSetState(props) {
    let lastData = props.dynamicdata[0];
    if (lastData === undefined) { return; }
    this.setState({
      exploitedServices: lastData.exploited_services,
      firstBlood: lastData.first_bloods,
      services: props.services
    });
  }

  render() {
    return (
      <div>
        <h3 className="title">Service Exploits</h3>
        <Table headers={ this.tableHeaders() }
               rows={ this.tableRows() }
               defaultSortAttr="expl_cell"/>
      </div>
    );
  }

  tableHeaders() {
    return [
      {id: 'service_name', label: 'Service Name'},
      {id: 'expl_cell', label: '# Stolen Flags'},
      {id: 'fb_cell', label: 'First Blood', altSortAttr: 'fb_date'},
      {id: 'teams_cell', label: 'Teams'}
    ];
  }

  tableRows() {
    let exploits = [];
    _.each( this.state.services, (s, sid) => {
      if (s.state !== 'enabled') {
        return;
      }
      let fb = this.state.firstBlood[sid];
      let fb_cell = 'Not yet!';
      let teams_cell = 'None';
      let expl_cell = 0;

      let teamsWhoExploited = [];
      if (sid in this.state.exploitedServices) {
        teamsWhoExploited = this.state.exploitedServices[sid]['teams'];
        teamsWhoExploited = _.chain(teamsWhoExploited).filter(team => {
          return this.props.teams.find(
            filteredTeam => team.team_id === filteredTeam.id
          );
        }).values().pluck('team_name').value();
        teams_cell = teamsWhoExploited.join(', ');
        expl_cell = this.state.exploitedServices[sid].total_flags_stolen;
      }

      if (typeof fb !== 'undefined') {
        let fb_date = dayjs(fb.created_on);
        let fb_team = this.props.teams.find(t => t.id === fb.team_id);
        if (fb_team === undefined) {
          if (teamsWhoExploited[0]) {
            fb_team = {name: teamsWhoExploited[0].team_name};
          }
          else {
            //fb_team = {name: 'Non-academic team'};
            fb_team = {name: 'Team'};
          }
        }
        fb_cell = `${fb_team.name} at ${fb_date.format('h:mm:ss a')}`;
      }

      exploits.push({
        service_name: s.service_name,
        expl_cell: expl_cell,
        fb_cell: fb_cell,
        fb_date: fb && fb.created_on,
        teams_cell: teams_cell
      });
    });
    return exploits;
  }
}
