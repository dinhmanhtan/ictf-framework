#!/usr/bin/env python3

import random
import string
import socket
import sys
import pexpect
import pexpect.fdpexpect
import time
import json

# To create random strings
DEBUG = False

def set_flag(ip, port, flag):
    # Car ID (this is the secret)
    username = ''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(12))
    # Car ID (this is the secret)
    password = ''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(12))
    # The image description contains the flag
    title = flag

    # Interaction with the service
    conn = socket.create_connection((ip, port))
    c = pexpect.fdpexpect.fdspawn(conn.fileno())
    if DEBUG:
        c.logfile = sys.stdout.buffer

    c.expect("Enter username:")
    c.sendline(username)
    c.expect("Enter password:") # Note: these are RegExps!
    c.sendline(password)
    c.expect("Enter document id:")
    c.sendline("") # Empty string, will generate id
    c.expect("Created new document id: ([\w ]+)")
    doc_id = c.match.groups()[0].decode()
    c.expect("Enter title:")
    c.sendline(flag)
    c.expect("Enter command:")
    c.send('quit')

    c.close()
    #conn.close()
    error = 0
    error_msg = ""

    return {'error': error,
            'error_msg': error_msg,
            'payload': {
                'flag_id': doc_id, # Unique id for each flag
                'secret_token': "%s:%s" % (username, password),  # benign (get_flag) will know this, exploits will not
                }
            }


if __name__ == "__main__":
    print(json.dumps(set_flag(sys.argv[1], int(sys.argv[2]), sys.argv[3] if len(sys.argv)>2 else "FLG1234567890")))

