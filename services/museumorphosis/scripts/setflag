#!/usr/bin/env python3

import random
from string import ascii_letters, digits
import sys
import json
import traceback
import requests
import jwt

ALPHA = ascii_letters + digits


def generate_random_string(length: int) -> bytes():
    return "".join(random.choice(ALPHA) for _ in range(length))


def generate_user(l: int = 10):
    username = generate_random_string(l)
    password = generate_random_string(l)
    return username, password


def setflag(ip, port, flag):
    response = {
        "error": False,
        "payload": {},
    }
    api_url = f"http://{ip}:{port}/api"

    username, password = generate_user(random.randint(9, 15))
    token = None
    for _ in range(3):
        resp = requests.post(
            f"{api_url}/register",
            json={"name": username, "password": password},
        )
        if resp.status_code == 200:
            token = resp.json().get("token")
        if token:
            break
    if not token:
        response["error"] = True
        response["payload"] = f"ERROR: Fail to login"
        return response

    for _ in range(random.randint(0,1)):
        title = generate_random_string(random.randint(0,7)) + " "+ generate_random_string(random.randint(0,6))
        description = (generate_random_string(random.randint(2, 9)) + " " + generate_random_string(random.randint(3, 8)))
        metadata = generate_random_string(random.randint(5,16))
        resp = requests.post(
            f"{api_url}/museum/exhibits",
            headers={"token": token},
            json={"title" : title,"description":description,"metadata":metadata}
        )

    # also can extract all someone else exhibits

    title = (
        generate_random_string(random.randint(2, 7))
        + " "
        + generate_random_string(random.randint(3, 6))
    )
    description = (
        generate_random_string(random.randint(2, 9))
        + " "
        + generate_random_string(random.randint(3, 8))
    )
    errors = []
    for _ in range(3):
        resp = requests.post(
            f"{api_url}/museum/exhibits",
            headers={"token": token},
            json={"title": title, "description": description, "metadata": flag},
        )
        if resp.status_code != 200:
            errors.append(f"Status_code: {resp.status_code} Error: {resp.text}") 
        else:
            exihibit_id = resp.json().get("id")
            museum_id = jwt.decode(token, options={"verify_signature": False}).get("id")
            flag_id = exihibit_id + museum_id
            response["payload"] = {
                "flag_id": flag_id, 
                "secret_token": password
            }
            break

    for _ in range(random.randint(0,1)):
        title = generate_random_string(random.randint(0,7)) + " "+ generate_random_string(random.randint(0,6))
        description = (generate_random_string(random.randint(2, 9)) + " " + generate_random_string(random.randint(3, 8)))
        metadata = generate_random_string(random.randint(5,16))
        resp = requests.post(
            f"{api_url}/museum/exhibits",
            headers={"token": token},
            json={"title" : title,"description":description,"metadata":metadata}
        )
    
    if response["payload"] == {}:
        response["error"] = True
        response["paload"] = list(set(errors))

    return response


if __name__ == "__main__":
    try:
        print(json.dumps(setflag(sys.argv[1], int(sys.argv[2]), sys.argv[3])))
    except Exception as e:
        response = {"error": True, "payload": str(e) + "\n" + traceback.format_exc()}
        print(json.dumps(response))
