#!/usr/bin/env python3

import random
from string import ascii_letters, digits
import sys
import json
import traceback
import requests

ALPHA = ascii_letters + digits

def generate_random_string(length:int) -> bytes():
    return ''.join(random.choice(ALPHA) for _ in range(length))


def generate_user(l:int = 10):
    username = generate_random_string(l)
    password = generate_random_string(l)
    return username, password

def benign(ip, port):
    response = {
        "error": False,
        "payload": {},
    }
    api_url = f"http://{ip}:{port}/api"

    num_eqn = random.randint(3,5)
    errors = []
    for _ in range(num_eqn):
        username, password= generate_user(random.randint(8,15))
        resp = requests.post(
        f"{api_url}/register",
        json={"name": username, "password": password}
        )
        if resp.status_code != 200:
            errors.append(resp.text)
            continue

        token = resp.json()["token"]

    # also can extract all someone else exhibits

        for _ in range(random.randint(1,3)):
            title = generate_random_string(random.randint(0,7)) + " "+ generate_random_string(random.randint(0,6))
            description = (generate_random_string(random.randint(2, 9)) + " " + generate_random_string(random.randint(3, 8)))
            metadata = generate_random_string(random.randint(5,16))
            resp = requests.post(
                f"{api_url}/museum/exhibits",
                headers={"token": token},
                json={"title" : title,"description":description,"metadata":metadata}
            )
            if resp.status_code != 200:
                errors.append(resp.text)
        if len(errors) > 1:
            response["error"] = True
            response["payload"] = errors

    return response


if __name__ == "__main__":
    try:
        print(json.dumps(benign(sys.argv[1], int(sys.argv[2]))))
        #print(benign(sys.argv[1], int(sys.argv[2])))
    except Exception as e:
        response = {
            "error": True,
            "payload": str(e) + "\n" + traceback.format_exc()
        }
        print(json.dumps(response))
