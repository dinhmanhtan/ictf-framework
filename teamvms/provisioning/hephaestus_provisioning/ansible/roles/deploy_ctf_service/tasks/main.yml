---
  - name: fail if GUEST_SERVICES_PATH is not specified
    fail:
      msg: "deploy_ctf_service requires GUEST_SERVICES_PATH to be set"
    when: GUEST_SERVICES_PATH is not defined
  
  - name: fail if HOST_SERVICES_PATH is not specified
    fail:
      msg: "deploy_ctf_service requires HOST_SERVICES_PATH to be set"
    when: HOST_SERVICES_PATH is not defined
  
  - name: fail if SERVICE_NAME is not specified
    fail:
      msg: "deploy_ctf_service requires SERVICE_NAME to be set"
    when: SERVICE_NAME is not defined
  
  - name: SERVICE DEPLOYMENT!
    debug:
      msg: "Currently deploying {{ SERVICE_NAME }}!"

#  - name: "create required service directories"
#    local_action: "command mkdir -p '{{ HOST_SERVICES_PATH }}/{{ SERVICE_NAME }}/service/{{ SERVICE_DIR }}'"
#    become: false
#    with_items:
#      - rw
#      - ro
#      - append
#    loop_control:
#      loop_var: SERVICE_DIR
#    when: DEPLOY_LOCAL == false
  
#  - name: "run `make clean` to get a clean slate for the service files"
#    local_action: "command make -C '{{ HOST_SERVICES_PATH }}/{{ SERVICE_NAME }}' clean"
#    become: false
#    when: DEPLOY_LOCAL == false
  
#  - name: "run `make bundle` to create the service files"
#    local_action: "command make -C '{{ HOST_SERVICES_PATH }}/{{ SERVICE_NAME }}' bundle"
#    become: false
#    when: DEPLOY_LOCAL == false
  
  #- name: "run `make scriptbot_scripts` to create the docker image containing the scripts executed by scriptbot"
  #  local_action: "command make -C '{{ HOST_SERVICES_PATH }}/{{ SERVICE_NAME }}' scriptbot_scripts SERVICE_NAME={{ SERVICE_NAME }}"
  #  become: false
  #  when: DEPLOY_LOCAL == false
  
  - name: copy over service directory to remote
    synchronize:
      src: "{{ HOST_SERVICES_PATH }}/{{ SERVICE_NAME }}/service/"
      dest: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/"
    when: DEPLOY_LOCAL == false
  
  - name: set service directory permissions
    file:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/"
      state: directory
      owner: "ctf"
      group: "chall"
      mode: 0755


  - name: Check if the Dockerfile file exists
    ansible.builtin.stat:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/Dockerfile"
    register: dockerfile_stat
    ignore_errors: yes

  - name: set Dockerfile permissions & owner
    file:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/Dockerfile"
      state: file
      owner: "ctf"
      group: "chall"
      mode: 0750
    when: dockerfile_stat.stat.exists

  - name: Check if the docker compose file exists
    ansible.builtin.stat:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/docker-compose.yml"
    register: docker_compose_stat
    ignore_errors: yes

  - name: set docker-compose file permissions & owner
    file:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/docker-compose.yml"
      state: file
      owner: "ctf"
      group: "chall"
      mode: 0750
    when: docker_compose_stat.stat.exists    


  - name: Check if ro folder exists
    ansible.builtin.stat:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/ro"
    register: ro_stat
    ignore_errors: yes

  - name: set ro folder permissions & owner
    file:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/ro"
      owner: "ctf"
      group: "chall"
      state: directory
      mode: 0750
      recurse: yes
    when: ro_stat.stat.exists 
  
  - name: Check if ro folder exists
    ansible.builtin.stat:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/rw"
    register: rw_stat
    ignore_errors: yes
  - name: set rw folder permissions & owner
    file:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/rw"
      owner: "ctf"
      group: "chall"
      state: directory
      mode: 0770
      recurse: yes
    when: rw_stat.stat.exists 
  

  - name: Check if append folder exists
    ansible.builtin.stat:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/append"
    register: append_stat
    ignore_errors: yes
  - name: set append folder permissions & owner
    file:
      path: "{{ GUEST_SERVICES_PATH }}/{{ SERVICE_NAME }}/append"
      owner: "ctf"
      group: "ctf"
      state: directory
      mode: 01764
      recurse: yes
    when: append_stat.stat.exists 
